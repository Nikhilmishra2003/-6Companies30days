  vector<int> result;
    deque<int> dq; // Stores indices of elements in the current window

    for (int i = 0; i < arr.size(); ++i) {
        // Remove indices of elements not in the current window
        if (!dq.empty() && dq.front() == i - k) {
            dq.pop_front();
        }

        // Remove indices of elements smaller than the current element
        // as they are not useful
        while (!dq.empty() && arr[dq.back()] <= arr[i]) {
            dq.pop_back();
        }

        // Add the current element index to the deque
        dq.push_back(i);

        // Add the maximum for the current window to the result
        if (i >= k - 1) {
            result.push_back(arr[dq.front()]);
        }
    }

    return result;
